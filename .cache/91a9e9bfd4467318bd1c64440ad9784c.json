{"dependencies":[],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar url = {\n    ocr: 'https://geeku.net/ocr'\n};\nvar paraments = {\n    image: '',\n    url: '',\n    language_type: 'CHN_ENG',\n    detect_direction: true,\n    detect_language: true,\n    probability: true\n};\nvar bytesLimit = 4 * 1024 * 1024;\nfunction toType(obj) {\n    return Object.prototype.toString.call(obj).match(/\\[\\w+\\s(\\w+)\\]/)[1].toLowerCase();\n}\nexports.toType = toType;\nexports.urlRegex = /https?:\\/\\/.*?/;\nvar JsOCR = /** @class */ (function () {\n    function JsOCR(content) {\n        this._file = null;\n        this._url = '';\n        this.imgReader = new FileReader();\n        this.img = new Image();\n        this.config = null;\n        this.token = '';\n        this.eventListeners = {};\n        this.source = 'b'; // baidu\n        if (!(this instanceof JsOCR)) {\n            throw new Error('This is not a JsOCR instance.');\n        }\n        if (!/image\\/(png)|(jpg)|(jpeg)|(bmp)/i.test(content.type)) {\n            throw new Error(\"Image format(\" + content.type + \") is not supported. Image format must be PNG, JPG or BMP.\");\n        }\n        this.config = Object.assign(paraments);\n        // Generate your own token: https://cloud.baidu.com/product/ocr.html\n        var tokenFromLocal = localStorage.getItem('token');\n        this.token = tokenFromLocal ? tokenFromLocal : '';\n        var type = toType(content);\n        switch (type) {\n            case 'file':\n                this.file = content;\n                break;\n            case 'event':\n                this.file = content.target.files[0];\n                break;\n            case 'htmlinputelement':\n                this.addChangeEvent(content);\n                break;\n            case 'string':\n                this.url = content;\n                break;\n            default: throw Error('Parament type is illegal.');\n        }\n    }\n    Object.defineProperty(JsOCR.prototype, \"file\", {\n        get: function () {\n            return this._file;\n        },\n        set: function (newVal) {\n            if (newVal.size >= bytesLimit) {\n                throw new Error('Image is oversize.');\n            }\n            console.dir(this.file);\n            this._file = newVal;\n            this.run();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsOCR.prototype, \"url\", {\n        get: function () {\n            return this._url;\n        },\n        set: function (newVal) {\n            if (!exports.urlRegex.test(newVal)) {\n                throw new Error('Url format illegal.');\n            }\n            this._url = newVal;\n            this.run('url');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JsOCR.prototype.run = function (type) {\n        if (type === void 0) { type = 'img'; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var base64, body, headers, distUrl, req;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        base64 = null;\n                        if (!(type === 'img')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.img2Base64(this._file)];\n                    case 1:\n                        base64 = _a.sent();\n                        this.config.image = base64.replace(/data:image\\/\\w+;base64,/, '');\n                        this.config.url = undefined;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (type === 'url') {\n                            this.config.image = undefined;\n                            this.config.url = this.url;\n                        }\n                        _a.label = 3;\n                    case 3:\n                        console.log(this.config);\n                        body = Object.keys(this.config)\n                            .filter(function (key) { return _this.config[key]; })\n                            .map(function (key) { return key + \"=\" + encodeURIComponent(_this.config[key]); }).join('&');\n                        headers = new Headers();\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                        distUrl = url.ocr + (\"?\" + (this.token && 'access_token=' + this.token) + \"&s=\" + this.source);\n                        req = fetch(distUrl, { method: 'POST', headers: headers, body: body })\n                            .then(function (res) { return res.json(); })\n                            .then(function (data) {\n                            if (data.error_code) {\n                                throw new Error(\"ERROR: \" + data.error_code + \": \" + data.error_msg);\n                            }\n                            else {\n                                _this.eventListeners['data'] &&\n                                    _this.eventListeners['data'].forEach(function (cb) { return cb.call(null, data.words_result); });\n                                localStorage && localStorage.setItem('jsocrHistory', JSON.stringify({\n                                    img: _this.config.url ? _this.config.url : _this.config.image,\n                                    data: data\n                                }));\n                            }\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    JsOCR.prototype.on = function (eventName, cb) {\n        if (this.eventListeners[eventName]) {\n            this.eventListeners[eventName].push(cb);\n        }\n        else {\n            this.eventListeners[eventName] = [cb];\n        }\n    };\n    JsOCR.prototype.addChangeEvent = function (el) {\n        var _this = this;\n        el.addEventListener('change', function (e) {\n            _this.file = e.target.files[0];\n        });\n    };\n    JsOCR.prototype.img2Base64 = function (img) {\n        var _this = this;\n        this.img.crossOrigin = 'anonymous';\n        return new Promise(function (r, j) {\n            _this.imgReader.onload = function (e) {\n                _this.img.src = e.target.result;\n                r(e.target.result);\n            };\n            _this.imgReader.readAsDataURL(img);\n        });\n    };\n    return JsOCR;\n}());\nexports.default = JsOCR;\n"},"hash":"8a1f9e3c298c8a7dd97aa2e9612f7b45"}